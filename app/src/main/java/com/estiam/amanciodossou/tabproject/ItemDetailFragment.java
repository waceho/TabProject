package com.estiam.amanciodossou.tabproject;import android.app.Activity;import android.database.sqlite.SQLiteException;import android.graphics.Color;import android.graphics.Paint;import android.graphics.drawable.BitmapDrawable;import android.os.Bundle;import android.support.v4.app.Fragment;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.Toast;import com.estiam.amanciodossou.tabproject.dummy.CurrentDocument;import com.estiam.amanciodossou.tabproject.dummy.DataManager;import com.estiam.amanciodossou.tabproject.dummy.DbBitmapUtility;import com.estiam.amanciodossou.tabproject.dummy.DrawedInfo;import com.estiam.amanciodossou.tabproject.dummy.OpenHelper;import java.io.Serializable;/** * A fragment representing a single Item detail screen. * This fragment is either contained in a {@link ItemListActivity} * in two-pane mode (on tablets) or a {@link ItemDetailActivity} * on handsets. */public class ItemDetailFragment extends Fragment {    DrawerView myObject;    private Bundle savedState = null;    private boolean createdStateInDestroyView;    private static final String SAVED_BUNDLE_TAG = "saved_bundle";    /**     * The fragment argument representing the item ID that this fragment     * represents.     */    public static final String ARG_ITEM_ID = "item_id";    public DrawerView dv ;    private Paint mPaint;    private Current current;    private OpenHelper mDbOpenHelper;    /**     * Mandatory empty constructor for the fragment manager to instantiate the     * fragment (e.g. upon screen orientation changes).     */    public ItemDetailFragment() {    }    @Override    public void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        current = (Current)getContext().getApplicationContext();        if (savedInstanceState != null) {            savedState = savedInstanceState.getBundle(SAVED_BUNDLE_TAG);            Log.d("have data", getArguments().getString(ARG_ITEM_ID));        } else {            Log.d("havent data", getArguments().getString(ARG_ITEM_ID));        }        Log.d("havent data", getArguments().getString(ARG_ITEM_ID));        if (getArguments().containsKey(ARG_ITEM_ID)) {            // Load the dummy content specified by the fragment            // arguments. In a real-world scenario, use a Loader            // to load content from a content provider.            Log.d("gat data", getArguments().getString(ARG_ITEM_ID));            CurrentDocument current = new CurrentDocument();            current.setId(ARG_ITEM_ID);            current.setTitle(getArguments().getString(ARG_ITEM_ID));        //  mItem = DummyContent.ITEM_MAP.get(getArguments().getString(ARG_ITEM_ID));            Activity activity = this.getActivity();            //CollapsingToolbarLayout appBarLayout = (CollapsingToolbarLayout) activity.findViewById(R.id.toolbar_layout);           /*            if (appBarLayout != null) {                appBarLayout.setTitle(mItem.content);            }            */         //  getDrawView();        }    }    @Override    public View onCreateView(LayoutInflater inflater, ViewGroup container,                             Bundle savedInstanceState) {        View rootView = inflater.inflate(R.layout.activity_item_detail, container, false);        //drawer();        if(savedState != null) {            myObject = (DrawerView) savedState.getSerializable(SAVED_BUNDLE_TAG);        }        return rootView;    }    @Override    public void onSaveInstanceState(Bundle outState) {        if (myObject == null) {            outState.putBundle(SAVED_BUNDLE_TAG, savedState);        } else {            outState.putBundle(SAVED_BUNDLE_TAG, createdStateInDestroyView ? savedState : saveState());        }        createdStateInDestroyView = false;        super.onSaveInstanceState(outState);    }    @Override    public void onViewCreated(View view, Bundle saveInstanceState){        super.onViewCreated(view, saveInstanceState);        Log.d("havent data", getArguments().getString(ARG_ITEM_ID));    }    private void drawer(){        dv = new DrawerView(getContext(), null);        mPaint = new Paint();        mPaint.setAntiAlias(true);        mPaint.setDither(true);        mPaint.setColor(Color.GREEN);        mPaint.setStyle(Paint.Style.STROKE);        mPaint.setStrokeJoin(Paint.Join.ROUND);        mPaint.setStrokeCap(Paint.Cap.ROUND);        mPaint.setStrokeWidth(12);    }    /**     * save Image in sqlite     * @throws SQLiteException     */    public void getDrawView() throws SQLiteException {        mDbOpenHelper = new OpenHelper(getActivity());        DataManager.loadImageFromDatabase(mDbOpenHelper);        DrawedInfo image = DataManager.getInstance().getimage(current.getId());        if (image != null){            BitmapDrawable dbmp = new BitmapDrawable(DbBitmapUtility.getImage(image.getTitle()));           // drawer();            dv.setBackgroundDrawable(dbmp);           // drawer();            Log.d("image Data", image.getTitle().toString());            Toast.makeText(getContext(), String.valueOf(image.getimageId()), Toast.LENGTH_SHORT).show();        }    }    private Bundle saveState() {        Bundle state = new Bundle();        state.putSerializable(SAVED_BUNDLE_TAG, myObject);        return state;    }}