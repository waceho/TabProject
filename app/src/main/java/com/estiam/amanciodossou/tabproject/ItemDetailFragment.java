package com.estiam.amanciodossou.tabproject;import android.app.Activity;import android.graphics.Color;import android.graphics.Paint;import android.support.design.widget.CollapsingToolbarLayout;import android.os.Bundle;import android.support.v4.app.Fragment;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.TextView;import com.estiam.amanciodossou.tabproject.dummy.CurrentDocument;import com.estiam.amanciodossou.tabproject.dummy.DummyContent;/** * A fragment representing a single Item detail screen. * This fragment is either contained in a {@link ItemListActivity} * in two-pane mode (on tablets) or a {@link ItemDetailActivity} * on handsets. */public class ItemDetailFragment extends Fragment {    /**     * The fragment argument representing the item ID that this fragment     * represents.     */    public static final String ARG_ITEM_ID = "item_id";    public DrawerView dv ;    private Paint mPaint;    /**     * Mandatory empty constructor for the fragment manager to instantiate the     * fragment (e.g. upon screen orientation changes).     */    public ItemDetailFragment() {    }    @Override    public void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        if (getArguments().containsKey(ARG_ITEM_ID)) {            // Load the dummy content specified by the fragment            // arguments. In a real-world scenario, use a Loader            // to load content from a content provider.            Log.d("gat data", getArguments().getString(ARG_ITEM_ID));            CurrentDocument current = new CurrentDocument();            current.setId(ARG_ITEM_ID);            current.setTitle(getArguments().getString(ARG_ITEM_ID));        //  mItem = DummyContent.ITEM_MAP.get(getArguments().getString(ARG_ITEM_ID));            Activity activity = this.getActivity();            //CollapsingToolbarLayout appBarLayout = (CollapsingToolbarLayout) activity.findViewById(R.id.toolbar_layout);           /*            if (appBarLayout != null) {                appBarLayout.setTitle(mItem.content);            }            */        }    }    @Override    public View onCreateView(LayoutInflater inflater, ViewGroup container,                             Bundle savedInstanceState) {        View rootView = inflater.inflate(R.layout.item_detail, container, false);        drawer();        return dv;    }    @Override    public void onViewCreated(View view, Bundle saveInstanceState){        super.onViewCreated(view, saveInstanceState);    }    private void drawer(){        dv = new DrawerView(getContext(), null);        mPaint = new Paint();        mPaint.setAntiAlias(true);        mPaint.setDither(true);        mPaint.setColor(Color.GREEN);        mPaint.setStyle(Paint.Style.STROKE);        mPaint.setStrokeJoin(Paint.Join.ROUND);        mPaint.setStrokeCap(Paint.Cap.ROUND);        mPaint.setStrokeWidth(12);    }}